# coding: utf-8

"""
    OpenDota API

    # Introduction This API provides Dota 2 related data. Please keep request rate to approximately 3/s. 

    OpenAPI spec version: 15.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class InlineResponse20018MmrFields(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'name': 'str',
        'table_id': 'float',
        'column_id': 'float',
        'data_type_id': 'float',
        'data_type_size': 'float',
        'data_type_modifier': 'float',
        'format': 'str'
    }

    attribute_map = {
        'name': 'name',
        'table_id': 'tableID',
        'column_id': 'columnID',
        'data_type_id': 'dataTypeID',
        'data_type_size': 'dataTypeSize',
        'data_type_modifier': 'dataTypeModifier',
        'format': 'format'
    }

    def __init__(self, name=None, table_id=None, column_id=None, data_type_id=None, data_type_size=None, data_type_modifier=None, format=None):
        """
        InlineResponse20018MmrFields - a model defined in Swagger
        """

        self._name = None
        self._table_id = None
        self._column_id = None
        self._data_type_id = None
        self._data_type_size = None
        self._data_type_modifier = None
        self._format = None

        if name is not None:
          self.name = name
        if table_id is not None:
          self.table_id = table_id
        if column_id is not None:
          self.column_id = column_id
        if data_type_id is not None:
          self.data_type_id = data_type_id
        if data_type_size is not None:
          self.data_type_size = data_type_size
        if data_type_modifier is not None:
          self.data_type_modifier = data_type_modifier
        if format is not None:
          self.format = format

    @property
    def name(self):
        """
        Gets the name of this InlineResponse20018MmrFields.
        name

        :return: The name of this InlineResponse20018MmrFields.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this InlineResponse20018MmrFields.
        name

        :param name: The name of this InlineResponse20018MmrFields.
        :type: str
        """

        self._name = name

    @property
    def table_id(self):
        """
        Gets the table_id of this InlineResponse20018MmrFields.
        tableID

        :return: The table_id of this InlineResponse20018MmrFields.
        :rtype: float
        """
        return self._table_id

    @table_id.setter
    def table_id(self, table_id):
        """
        Sets the table_id of this InlineResponse20018MmrFields.
        tableID

        :param table_id: The table_id of this InlineResponse20018MmrFields.
        :type: float
        """

        self._table_id = table_id

    @property
    def column_id(self):
        """
        Gets the column_id of this InlineResponse20018MmrFields.
        columnID

        :return: The column_id of this InlineResponse20018MmrFields.
        :rtype: float
        """
        return self._column_id

    @column_id.setter
    def column_id(self, column_id):
        """
        Sets the column_id of this InlineResponse20018MmrFields.
        columnID

        :param column_id: The column_id of this InlineResponse20018MmrFields.
        :type: float
        """

        self._column_id = column_id

    @property
    def data_type_id(self):
        """
        Gets the data_type_id of this InlineResponse20018MmrFields.
        dataTypeID

        :return: The data_type_id of this InlineResponse20018MmrFields.
        :rtype: float
        """
        return self._data_type_id

    @data_type_id.setter
    def data_type_id(self, data_type_id):
        """
        Sets the data_type_id of this InlineResponse20018MmrFields.
        dataTypeID

        :param data_type_id: The data_type_id of this InlineResponse20018MmrFields.
        :type: float
        """

        self._data_type_id = data_type_id

    @property
    def data_type_size(self):
        """
        Gets the data_type_size of this InlineResponse20018MmrFields.
        dataTypeSize

        :return: The data_type_size of this InlineResponse20018MmrFields.
        :rtype: float
        """
        return self._data_type_size

    @data_type_size.setter
    def data_type_size(self, data_type_size):
        """
        Sets the data_type_size of this InlineResponse20018MmrFields.
        dataTypeSize

        :param data_type_size: The data_type_size of this InlineResponse20018MmrFields.
        :type: float
        """

        self._data_type_size = data_type_size

    @property
    def data_type_modifier(self):
        """
        Gets the data_type_modifier of this InlineResponse20018MmrFields.
        dataTypeModifier

        :return: The data_type_modifier of this InlineResponse20018MmrFields.
        :rtype: float
        """
        return self._data_type_modifier

    @data_type_modifier.setter
    def data_type_modifier(self, data_type_modifier):
        """
        Sets the data_type_modifier of this InlineResponse20018MmrFields.
        dataTypeModifier

        :param data_type_modifier: The data_type_modifier of this InlineResponse20018MmrFields.
        :type: float
        """

        self._data_type_modifier = data_type_modifier

    @property
    def format(self):
        """
        Gets the format of this InlineResponse20018MmrFields.
        format

        :return: The format of this InlineResponse20018MmrFields.
        :rtype: str
        """
        return self._format

    @format.setter
    def format(self, format):
        """
        Sets the format of this InlineResponse20018MmrFields.
        format

        :param format: The format of this InlineResponse20018MmrFields.
        :type: str
        """

        self._format = format

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, InlineResponse20018MmrFields):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
