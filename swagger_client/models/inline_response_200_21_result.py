# coding: utf-8

"""
    OpenDota API

    # Introduction This API provides Dota 2 related data. Please keep request rate to approximately 3/s. 

    OpenAPI spec version: 15.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class InlineResponse20021Result(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'gold_per_min': 'list[InlineResponse20021ResultGoldPerMin]',
        'xp_per_min': 'list[InlineResponse20021ResultGoldPerMin]',
        'kills_per_min': 'list[InlineResponse20021ResultGoldPerMin]',
        'last_hits_per_min': 'list[InlineResponse20021ResultGoldPerMin]',
        'hero_damage_per_min': 'list[InlineResponse20021ResultGoldPerMin]',
        'hero_healing_per_min': 'list[InlineResponse20021ResultGoldPerMin]',
        'tower_damage': 'list[InlineResponse20021ResultGoldPerMin]'
    }

    attribute_map = {
        'gold_per_min': 'gold_per_min',
        'xp_per_min': 'xp_per_min',
        'kills_per_min': 'kills_per_min',
        'last_hits_per_min': 'last_hits_per_min',
        'hero_damage_per_min': 'hero_damage_per_min',
        'hero_healing_per_min': 'hero_healing_per_min',
        'tower_damage': 'tower_damage'
    }

    def __init__(self, gold_per_min=None, xp_per_min=None, kills_per_min=None, last_hits_per_min=None, hero_damage_per_min=None, hero_healing_per_min=None, tower_damage=None):
        """
        InlineResponse20021Result - a model defined in Swagger
        """

        self._gold_per_min = None
        self._xp_per_min = None
        self._kills_per_min = None
        self._last_hits_per_min = None
        self._hero_damage_per_min = None
        self._hero_healing_per_min = None
        self._tower_damage = None

        if gold_per_min is not None:
          self.gold_per_min = gold_per_min
        if xp_per_min is not None:
          self.xp_per_min = xp_per_min
        if kills_per_min is not None:
          self.kills_per_min = kills_per_min
        if last_hits_per_min is not None:
          self.last_hits_per_min = last_hits_per_min
        if hero_damage_per_min is not None:
          self.hero_damage_per_min = hero_damage_per_min
        if hero_healing_per_min is not None:
          self.hero_healing_per_min = hero_healing_per_min
        if tower_damage is not None:
          self.tower_damage = tower_damage

    @property
    def gold_per_min(self):
        """
        Gets the gold_per_min of this InlineResponse20021Result.

        :return: The gold_per_min of this InlineResponse20021Result.
        :rtype: list[InlineResponse20021ResultGoldPerMin]
        """
        return self._gold_per_min

    @gold_per_min.setter
    def gold_per_min(self, gold_per_min):
        """
        Sets the gold_per_min of this InlineResponse20021Result.

        :param gold_per_min: The gold_per_min of this InlineResponse20021Result.
        :type: list[InlineResponse20021ResultGoldPerMin]
        """

        self._gold_per_min = gold_per_min

    @property
    def xp_per_min(self):
        """
        Gets the xp_per_min of this InlineResponse20021Result.

        :return: The xp_per_min of this InlineResponse20021Result.
        :rtype: list[InlineResponse20021ResultGoldPerMin]
        """
        return self._xp_per_min

    @xp_per_min.setter
    def xp_per_min(self, xp_per_min):
        """
        Sets the xp_per_min of this InlineResponse20021Result.

        :param xp_per_min: The xp_per_min of this InlineResponse20021Result.
        :type: list[InlineResponse20021ResultGoldPerMin]
        """

        self._xp_per_min = xp_per_min

    @property
    def kills_per_min(self):
        """
        Gets the kills_per_min of this InlineResponse20021Result.

        :return: The kills_per_min of this InlineResponse20021Result.
        :rtype: list[InlineResponse20021ResultGoldPerMin]
        """
        return self._kills_per_min

    @kills_per_min.setter
    def kills_per_min(self, kills_per_min):
        """
        Sets the kills_per_min of this InlineResponse20021Result.

        :param kills_per_min: The kills_per_min of this InlineResponse20021Result.
        :type: list[InlineResponse20021ResultGoldPerMin]
        """

        self._kills_per_min = kills_per_min

    @property
    def last_hits_per_min(self):
        """
        Gets the last_hits_per_min of this InlineResponse20021Result.

        :return: The last_hits_per_min of this InlineResponse20021Result.
        :rtype: list[InlineResponse20021ResultGoldPerMin]
        """
        return self._last_hits_per_min

    @last_hits_per_min.setter
    def last_hits_per_min(self, last_hits_per_min):
        """
        Sets the last_hits_per_min of this InlineResponse20021Result.

        :param last_hits_per_min: The last_hits_per_min of this InlineResponse20021Result.
        :type: list[InlineResponse20021ResultGoldPerMin]
        """

        self._last_hits_per_min = last_hits_per_min

    @property
    def hero_damage_per_min(self):
        """
        Gets the hero_damage_per_min of this InlineResponse20021Result.

        :return: The hero_damage_per_min of this InlineResponse20021Result.
        :rtype: list[InlineResponse20021ResultGoldPerMin]
        """
        return self._hero_damage_per_min

    @hero_damage_per_min.setter
    def hero_damage_per_min(self, hero_damage_per_min):
        """
        Sets the hero_damage_per_min of this InlineResponse20021Result.

        :param hero_damage_per_min: The hero_damage_per_min of this InlineResponse20021Result.
        :type: list[InlineResponse20021ResultGoldPerMin]
        """

        self._hero_damage_per_min = hero_damage_per_min

    @property
    def hero_healing_per_min(self):
        """
        Gets the hero_healing_per_min of this InlineResponse20021Result.

        :return: The hero_healing_per_min of this InlineResponse20021Result.
        :rtype: list[InlineResponse20021ResultGoldPerMin]
        """
        return self._hero_healing_per_min

    @hero_healing_per_min.setter
    def hero_healing_per_min(self, hero_healing_per_min):
        """
        Sets the hero_healing_per_min of this InlineResponse20021Result.

        :param hero_healing_per_min: The hero_healing_per_min of this InlineResponse20021Result.
        :type: list[InlineResponse20021ResultGoldPerMin]
        """

        self._hero_healing_per_min = hero_healing_per_min

    @property
    def tower_damage(self):
        """
        Gets the tower_damage of this InlineResponse20021Result.

        :return: The tower_damage of this InlineResponse20021Result.
        :rtype: list[InlineResponse20021ResultGoldPerMin]
        """
        return self._tower_damage

    @tower_damage.setter
    def tower_damage(self, tower_damage):
        """
        Sets the tower_damage of this InlineResponse20021Result.

        :param tower_damage: The tower_damage of this InlineResponse20021Result.
        :type: list[InlineResponse20021ResultGoldPerMin]
        """

        self._tower_damage = tower_damage

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, InlineResponse20021Result):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
